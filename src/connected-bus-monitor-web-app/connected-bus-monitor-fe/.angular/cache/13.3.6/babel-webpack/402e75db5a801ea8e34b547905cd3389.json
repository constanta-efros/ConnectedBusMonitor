{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let CustomChartComponent = /*#__PURE__*/(() => {\n  class CustomChartComponent {\n    constructor() {\n      this.chartData = [];\n      this.metric = '';\n      this.lineChartData = [{\n        type: 'line',\n        data: []\n      }];\n      this.lineChartLabels = [];\n      this.lineChartColors = [{\n        borderColor: \"#7DB3FF\",\n        backgroundColor: \"rgba(106, 110, 229, .16)\"\n      }];\n      this.chartColors = [{\n        backgroundColor: ['rgba(63, 191, 127,  0.4)', 'rgba(191, 191, 63, 0.4)'],\n        borderColor: ['rgba(63, 191, 127, 0.8)', 'rgba(63, 191, 191, 0.8)'],\n        hoverBackgroundColor: ['rgba(63, 191, 127, 0.6)', 'rgba(63, 191, 191, 0.6)'],\n        borderWidth: 2\n      }];\n      this.chartOptions = {\n        responsive: true,\n        maintainAspectRatio: false,\n        title: {\n          text: 'Temperature',\n          display: true\n        }\n      };\n      this.lineChartLegend = false;\n      this.lineChartType = 'line';\n      this.lineChartPlugins = [];\n    }\n\n    ngOnInit() {\n      if (this.metric == 'temperature') {\n        this.lineChartData[0].data = this.chartData.map(record => record.temperature);\n      } else if (this.metric == 'humidity') {\n        this.lineChartData[0].data = this.chartData.map(record => record.humidity);\n      } else if (this.metric == 'co2') {\n        this.lineChartData[0].data = this.chartData.map(record => record.co2);\n      }\n\n      this.lineChartLabels = this.chartData.map(record => record.date);\n    }\n\n  }\n\n  CustomChartComponent.ɵfac = function CustomChartComponent_Factory(t) {\n    return new (t || CustomChartComponent)();\n  };\n\n  CustomChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomChartComponent,\n    selectors: [[\"custom-chart\"]],\n    inputs: {\n      chartData: \"chartData\",\n      metric: \"metric\"\n    },\n    decls: 2,\n    vars: 5,\n    consts: [[2, \"display\", \"block\"], [\"baseChart\", \"\", \"width\", \"100\", \"height\", \"200\", 3, \"datasets\", \"labels\", \"options\", \"legend\", \"plugins\"]],\n    template: function CustomChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"canvas\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"datasets\", ctx.lineChartData)(\"labels\", ctx.lineChartLabels)(\"options\", ctx.chartOptions)(\"legend\", ctx.lineChartLegend)(\"plugins\", ctx.lineChartPlugins);\n      }\n    },\n    directives: [i1.BaseChartDirective],\n    styles: [\"\"]\n  });\n  return CustomChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}